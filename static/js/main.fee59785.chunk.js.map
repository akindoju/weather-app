{"version":3,"sources":["Spinner.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Spinner","className","version","id","xmlns","x","y","width","height","viewBox","fill","d","enableBackground","api","App","useState","hour","setHour","temp","setTemp","icon","setIcon","minutes","setMinutes","weather","setWeather","isRain","setIsRain","isClear","setIsClear","isClouds","setIsClouds","location","setLocation","humidity","setHumidity","latitude","setLatitude","timezone","setTimezone","longitude","setLongitude","searchValue","setSearchValue","isFetchingWeather","setIsFetchingWeather","findWeather","a","fetch","response","json","data","name","main","toFixed","description","split","map","item","charAt","toUpperCase","slice","join","coord","lon","lat","console","log","useEffect","then","res","catch","err","includes","locationCurrentTime","Date","getTime","getHours","getMinutes","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","onClick","day","getDay","date","month","getMonth","year","getFullYear","dateBuilder","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee59785.chunk.js","sourcesContent":["const Spinner = () => (\r\n  <div className=\"preloader\">\r\n    <svg\r\n      version=\"1.1\"\r\n      id=\"sun\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      width=\"10px\"\r\n      height=\"10px\"\r\n      viewBox=\"0 0 10 10\"\r\n    >\r\n      <g>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M6.942,3.876c-0.4-0.692-1.146-1.123-1.946-1.123c-0.392,0-0.779,0.104-1.121,0.301c-1.072,0.619-1.44,1.994-0.821,3.067C3.454,6.815,4.2,7.245,5,7.245c0.392,0,0.779-0.104,1.121-0.301C6.64,6.644,7.013,6.159,7.167,5.581C7.321,5,7.243,4.396,6.942,3.876z M6.88,5.505C6.745,6.007,6.423,6.427,5.973,6.688C5.676,6.858,5.34,6.948,5,6.948c-0.695,0-1.343-0.373-1.69-0.975C2.774,5.043,3.093,3.849,4.024,3.312C4.32,3.14,4.656,3.05,4.996,3.05c0.695,0,1.342,0.374,1.69,0.975C6.946,4.476,7.015,5,6.88,5.505z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M8.759,2.828C8.718,2.757,8.626,2.732,8.556,2.774L7.345,3.473c-0.07,0.041-0.094,0.132-0.053,0.202C7.319,3.723,7.368,3.75,7.419,3.75c0.025,0,0.053-0.007,0.074-0.02l1.211-0.699C8.774,2.989,8.8,2.899,8.759,2.828z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M1.238,7.171c0.027,0.047,0.077,0.074,0.128,0.074c0.025,0,0.051-0.008,0.074-0.02l1.211-0.699c0.071-0.041,0.095-0.133,0.054-0.203S2.574,6.228,2.503,6.269l-1.21,0.699C1.221,7.009,1.197,7.101,1.238,7.171z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M6.396,2.726c0.052,0,0.102-0.026,0.13-0.075l0.349-0.605C6.915,1.976,6.89,1.885,6.819,1.844c-0.07-0.042-0.162-0.017-0.202,0.054L6.269,2.503C6.228,2.574,6.251,2.666,6.322,2.706C6.346,2.719,6.371,2.726,6.396,2.726z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M3.472,7.347L3.123,7.952c-0.041,0.07-0.017,0.162,0.054,0.203C3.2,8.169,3.226,8.175,3.25,8.175c0.052,0,0.102-0.027,0.129-0.074l0.349-0.605c0.041-0.07,0.017-0.16-0.054-0.203C3.603,7.251,3.513,7.276,3.472,7.347z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M3.601,2.726c0.025,0,0.051-0.007,0.074-0.02C3.746,2.666,3.77,2.574,3.729,2.503l-0.35-0.604C3.338,1.828,3.248,1.804,3.177,1.844C3.106,1.886,3.082,1.976,3.123,2.047l0.35,0.604C3.5,2.7,3.549,2.726,3.601,2.726z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M6.321,7.292c-0.07,0.043-0.094,0.133-0.054,0.203l0.351,0.605c0.026,0.047,0.076,0.074,0.127,0.074c0.025,0,0.051-0.006,0.074-0.02c0.072-0.041,0.096-0.133,0.055-0.203l-0.35-0.605C6.483,7.276,6.393,7.253,6.321,7.292z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M2.202,5.146c0.082,0,0.149-0.065,0.149-0.147S2.284,4.851,2.202,4.851H1.503c-0.082,0-0.148,0.066-0.148,0.148s0.066,0.147,0.148,0.147H2.202z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M8.493,4.851H7.794c-0.082,0-0.148,0.066-0.148,0.148s0.066,0.147,0.148,0.147l0,0h0.699c0.082,0,0.148-0.065,0.148-0.147S8.575,4.851,8.493,4.851L8.493,4.851z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M5.146,2.203V0.805c0-0.082-0.066-0.148-0.148-0.148c-0.082,0-0.148,0.066-0.148,0.148v1.398c0,0.082,0.066,0.149,0.148,0.149C5.08,2.352,5.146,2.285,5.146,2.203z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M4.85,7.796v1.396c0,0.082,0.066,0.15,0.148,0.15c0.082,0,0.148-0.068,0.148-0.15V7.796c0-0.082-0.066-0.148-0.148-0.148C4.917,7.647,4.85,7.714,4.85,7.796z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M2.651,3.473L1.44,2.774C1.369,2.732,1.279,2.757,1.238,2.828C1.197,2.899,1.221,2.989,1.292,3.031l1.21,0.699c0.023,0.013,0.049,0.02,0.074,0.02c0.051,0,0.101-0.026,0.129-0.075C2.747,3.604,2.722,3.514,2.651,3.473z\"\r\n        ></path>\r\n        <path\r\n          fill=\"none\"\r\n          d=\"M8.704,6.968L7.493,6.269c-0.07-0.041-0.162-0.016-0.201,0.055c-0.041,0.07-0.018,0.162,0.053,0.203l1.211,0.699c0.023,0.012,0.049,0.02,0.074,0.02c0.051,0,0.102-0.027,0.129-0.074C8.8,7.101,8.776,7.009,8.704,6.968z\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n\r\n    <svg\r\n      version=\"1.1\"\r\n      id=\"cloud\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      width=\"10px\"\r\n      height=\"10px\"\r\n      viewBox=\"0 0 10 10\"\r\n      enableBackground=\"new 0 0 10 10\"\r\n    >\r\n      <path\r\n        fill=\"none\"\r\n        d=\"M8.528,5.624H8.247c-0.085,0-0.156-0.068-0.156-0.154c0-0.694-0.563-1.257-1.257-1.257c-0.098,0-0.197,0.013-0.3,0.038C6.493,4.259,6.45,4.252,6.415,4.229C6.38,4.208,6.356,4.172,6.348,4.131C6.117,3.032,5.135,2.235,4.01,2.235c-1.252,0-2.297,0.979-2.379,2.23c-0.004,0.056-0.039,0.108-0.093,0.13C1.076,4.793,0.776,5.249,0.776,5.752c0,0.693,0.564,1.257,1.257,1.257h6.495c0.383,0,0.695-0.31,0.695-0.692S8.911,5.624,8.528,5.624z\"\r\n      ></path>\r\n    </svg>\r\n\r\n    <div className=\"rain\">\r\n      <span className=\"drop\"></span>\r\n      <span className=\"drop\"></span>\r\n      <span className=\"drop\"></span>\r\n      <span className=\"drop\"></span>\r\n      <span className=\"drop\"></span>\r\n      <span className=\"drop\"></span>\r\n      <span className=\"drop\"></span>\r\n      <span className=\"drop\"></span>\r\n      <span className=\"drop\"></span>\r\n      <span className=\"drop\"></span>\r\n    </div>\r\n\r\n    <div className=\"text\">Getting Weather</div>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport Spinner from \"./Spinner\";\n\nconst api = {\n  key: \"1c886d44081cc6dffdf01ed1c0dfb7e4\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nconst App = () => {\n  const [hour, setHour] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [minutes, setMinutes] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [isRain, setIsRain] = useState(false);\n  const [isClear, setIsClear] = useState(false);\n  const [isClouds, setIsClouds] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [timezone, setTimezone] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isFetchingWeather, setIsFetchingWeather] = useState(true);\n\n  const dateBuilder = () => {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    const days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    const locationCurrentTime = new Date(\n      new Date().getTime() - -timezone * 1000\n    );\n\n    let day = days[locationCurrentTime.getDay()];\n    let date = locationCurrentTime.getDay();\n    let month = months[locationCurrentTime.getMonth()];\n    let year = locationCurrentTime.getFullYear();\n\n    return `${day} ${date} ${month}, ${year}`;\n  };\n\n  const findWeather = async () => {\n    setIsFetchingWeather(true);\n\n    try {\n      const response = await fetch(\n        `${api.base}weather?q=${searchValue}&units=metric&APPID=${api.key}`\n      );\n      const data = await response.json();\n      setLocation(data.name);\n      setTemp(data.main.temp.toFixed());\n      setWeather(\n        data.weather[0].description\n          .split(\" \")\n          .map((item) => {\n            return item.charAt(0).toUpperCase() + item.slice(1);\n          })\n          .join(\" \") // making first letter of word(s) capital\n      );\n      setIcon(data.weather[0].icon);\n      setHumidity(data.main.humidity);\n      setLongitude(data.coord.lon.toFixed(2));\n      setLatitude(data.coord.lat.toFixed(2));\n      setTimezone(data.timezone);\n      setIsFetchingWeather(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setIsFetchingWeather(true);\n    fetch(`${api.base}weather?q=abuja&units=metric&APPID=${api.key}`)\n      .then((data) => data.json())\n      .then((res) => {\n        setLocation(res.name);\n        setTemp(res.main.temp.toFixed());\n        setWeather(res.weather[0].main);\n        setIcon(res.weather[0].icon);\n        setHumidity(res.main.humidity);\n        setLongitude(res.coord.lon.toFixed(2));\n        setLatitude(res.coord.lat.toFixed(2));\n        setTimezone(res.timezone);\n        setIsFetchingWeather(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (weather.includes(\"Rain\")) {\n      setIsRain(true);\n      setIsClouds(false);\n      setIsClear(false);\n    } else if (weather.includes(\"Cloud\")) {\n      setIsRain(false);\n      setIsClouds(true);\n      setIsClear(false);\n    } else if (weather.includes(\"Clear\")) {\n      setIsRain(false);\n      setIsClouds(false);\n      setIsClear(true);\n    } else {\n      setIsRain(false);\n      setIsClouds(false);\n      setIsClear(false);\n    }\n  }, [weather]);\n\n  useEffect(() => {\n    const locationCurrentTime = new Date(\n      new Date().getTime() - -timezone * 1000\n    );\n    setHour(locationCurrentTime.getHours() - 1);\n    setMinutes(locationCurrentTime.getMinutes());\n    console.log(locationCurrentTime, \"the time\");\n  }, [timezone]);\n\n  return (\n    <div\n      className={\n        isRain\n          ? \"app isRain\"\n          : isClouds\n          ? \"app isCloudsBG\"\n          : isClear\n          ? \"app isClear\"\n          : \"app\"\n      }\n    >\n      <div\n        className={\n          isRain\n            ? \"mainContainer isRain\"\n            : isClouds\n            ? \"mainContainer isClouds\"\n            : isClear\n            ? \"mainContainer isClear\"\n            : \"mainContainer\"\n        }\n      >\n        <div className=\"mainContainer__top\">\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              findWeather();\n            }}\n            className=\"mainContainer__top--search\"\n          >\n            <input\n              type=\"text\"\n              placeholder=\"Enter location\"\n              value={searchValue}\n              onChange={({ target }) => {\n                setSearchValue(target.value);\n              }}\n            />\n\n            <div className=\"mainContainer__top--search-icon\">\n              <svg\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"32\"\n                height=\"32\"\n                viewBox=\"0 0 32 32\"\n                onClick={() => {\n                  findWeather();\n                }}\n              >\n                <title>search</title>\n                <path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"></path>\n              </svg>\n            </div>\n          </form>\n\n          <div className=\"mainContainer__top--details\">\n            <h1 className=\"mainContainer__top--details-location\">{location}</h1>\n            <h2 className=\"mainContainer__top--details-time\">\n              {/* Setting time based on 12hrs cycle */}\n              {hour > 12 ? hour - 12 : hour}:\n              {minutes < 10 ? \"0\" + { minutes } : minutes}\n              {hour > 12 ? \"pm\" : \"am\"}\n            </h2>\n            <h3 className=\"mainContainer__top--details-date\">\n              {dateBuilder(new Date())}\n            </h3>\n          </div>\n          {isFetchingWeather ? <Spinner /> : null}\n        </div>\n\n        <div className=\"mainContainer__btm\">\n          <div className=\"mainContainer__btm--temp\">{temp}°C</div>\n          <div className=\"mainContainer__btm--weather\">\n            <img\n              src={`https://openweathermap.org/img/w/${icon}.png`}\n              alt={icon}\n            />\n            <h3>{weather}</h3>\n          </div>\n          <div className=\"mainContainer__btm--info mainContainer__btm--humidity\">\n            <h2>Humidity</h2>\n            <h1>{humidity}%</h1>\n          </div>\n          <div className=\"mainContainer__btm--info mainContainer__btm--longitude\">\n            <h2>Longitude</h2>\n            <h1>{longitude}°E</h1>\n          </div>\n          <div className=\"mainContainer__btm--info mainContainer__btm--latitude\">\n            <h2>Latitude</h2>\n            <h1>{latitude}°N</h1>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}